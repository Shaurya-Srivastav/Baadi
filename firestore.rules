rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Helper function to check if user is primary caregiver of a patient
    function isPrimaryCaregiverOf(patientId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/patients/$(patientId)) &&
        get(/databases/$(database)/documents/patients/$(patientId)).data.primaryCaregiver == request.auth.uid;
    }
    
    // Helper function to check if user is admin
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users collection
    match /users/{userId} {
      // Users can read and write only their own data
      allow read, write: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }
    
    // Patients collection
    match /patients/{patientId} {
      // Allow access to patient data for caregivers
      allow read, write: if request.auth != null && (
        request.auth.uid == patientId || 
        isPrimaryCaregiverOf(patientId) ||
        isAdmin()
      );
    }
    
    // Alerts collection
    match /alerts/{alertId} {
      // Users can read alerts associated with them
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.patientId || 
        isPrimaryCaregiverOf(resource.data.patientId) ||
        isAdmin()
      );
      // Users can create alerts
      allow create: if request.auth != null;
      // Users can update and delete alerts associated with them
      allow update, delete: if request.auth != null && (
        request.auth.uid == resource.data.patientId || 
        isPrimaryCaregiverOf(resource.data.patientId) ||
        isAdmin()
      );
    }
    
    // FCM Tokens collection
    match /fcmTokens/{tokenId} {
      // Users can read and write only their own tokens
      allow read, write: if request.auth != null && request.auth.uid == tokenId;
    }

    // Default rule - deny access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}